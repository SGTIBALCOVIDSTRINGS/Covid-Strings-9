doc. type. html
script
html
head
utf8
viewport content=width=device-width, initial-scale=one>
title covidstrings 9 second round bracket
filename=covid strings nine second round.js
highest remaining seed=(greatest remaining num value in covid strings list)
lowest remaining seed = (lowest remaining num value in covid strings list)
intermediate seed1=(first middle remaining value in covid strings list)
intermediate seed2=(second middle remaining value in covid strings list))
createround =covid strings9 second round 
round =createelement(div);
round.classlist.add(round);
for (let i = zero; i < teams.length; i += two) {
round.appendchild(creatematchup(teams[i], teams[i + one]));
 return round;
bracket.appendchild(createround(teams));
  create matchup (intermediate seed two versus intermediate seed one )
  matchup = document.createelement(div);
  matchup.classlist.add(matchup);
  matchup.innerHTML = div>${team1}</div><div>${team2}</div>;
  return matchup;
create matchup(lowest remaining seed versus highest remaining seed)
matchup = document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerHTML = div>${team1}</div><div>${team2}</div>;
return matchup;
java util.scanner
java.util
questions[]questions={
collections.shuffle(arrays.aslist(questions)
question15
question16
question17
question18
question19
question20
question21
question22
advanceteams=slice(currentteams)
result= declarewinner(team1 score, team2 score)
if intermediate seed1 score>=forty:
console.log(intermediate seed1 advances)
else:
console.log(intermediate seed2 advances)
result=declarewinner(team1 score, team2 score)
if highest remaining seed score>=forty:
console.log(highest remaining seed advances)
else:
console.log(lowest remaining seed advances)
return filename
